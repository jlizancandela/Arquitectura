---
const { frontmatter } = Astro.props;
const { images, tags, h1 } = frontmatter;
const cantidad = parseInt(images.length);
console.log(cantidad);
---

<article>
    <section>
       <div class="titulo">
            <h1>{h1}</h1>
            {
                tags.map((tag: string) => (
                    <a href={`/tags/${tag}`}>
                        <span class="tag">{tag}</span>
                    </a>
                ))
            }
        </div>
        <slot />

    </section>
 
    <section id="myImages">
        {
            images.map((i: { url: string; alt: string }) => (
                <img src={i.url} alt={i.alt}  />
            ))
        }
    </section>
</article>

<style>
    a {
        text-decoration: none;
        color: white;
    }

    a:focus {
        text-decoration: none;
        color: white;
    }
    .titulo {
        display: flex;
        align-items: center;
        gap: 20px;
    }
    .tag {
        background-color: rgb(206, 24, 230);
        border-radius: 10px;
        padding: 6px;
        font-size: 12px;
    }
    .tag:hover {
        box-shadow: 0px 0px 4px 3px blue;
    }
    .tag:nth-child(2n) {
        background-color: cadetblue;
    }

    article {
        display: flex;
        flex-direction: row;
        width: 100%;
        flex-wrap: wrap;
        padding: 20px;
    }
    section {
        display: flex;
        flex-direction: column;
        width: 100%;
        gap: 20px;
        padding: 20px;
    }

    #myImages {
        display: flex;
    }

    p {
s        font-size: large;
    }
    img {
        width: 100%;
        margin: auto;
        
    }

    img:hover {
        transform: none;
    }
    
    @media screen and (min-width: 950px) { /* Ordenaror */
        section {
            width: 50%;
        }


        #myImages {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            grid-gap: 10px; 
        }
    }


</style>
